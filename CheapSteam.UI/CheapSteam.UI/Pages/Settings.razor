@page "/settings"
@using System.ComponentModel.DataAnnotations
<PageTitle>设置</PageTitle>

@if (Configuration.Auth)
{
<AuthorizeView>
    <NotAuthorized>
        <RedirectToLogin />
    </NotAuthorized>
</AuthorizeView>
}

<h1>设置</h1>
<div class="row">
    <div class="col-lg-6">
        <Card Title="爬虫配置" Class="shadow-sm mb-3">
            <Body>
                <Form Loading="loading" Model="@scraperModel"
                      LabelColSpan="8"
                      WrapperColSpan="16">
                    <FormItem Label="代理地址">
                        <Input @bind-Value="@context.ProxyUrl" />
                    </FormItem>
                    <FormItem Label="最大线程数">
                        <AntDesign.InputNumber Type="RuleFieldType.number" @bind-Value="@context.MaxThread" Min="1"/>
                    </FormItem>
                    <FormItem Label="游戏类型">
                        <RadioGroup @bind-Value="@context.GameKind">
                            <Radio RadioButton Value="@("CSGO")">CSGO</Radio>
                            <Radio RadioButton Value="@("DOTA2")">DOTA2</Radio>
                        </RadioGroup>
                    </FormItem>
                    <FormItem Label="BUFF 最小销售数">
                        <Input Type="RuleFieldType.number" @bind-Value="@context.MinSellCount" />
                    </FormItem>
                    <FormItem Label="BUFF 最小销售价格">
                        <Input Type="RuleFieldType.number" @bind-Value="@context.MinSellPrice" />
                    </FormItem>
                    <FormItem Label="BUFF 最大销售价格">
                        <Input Type="RuleFieldType.number" @bind-Value="@context.MaxSellPrice" />
                    </FormItem>
                </Form>
            </Body>
        </Card>
    </div>
    <div class="col-lg-6">
        <Card Title="账号配置" Class="shadow-sm mb-3">
            <Body>
                <Form Loading="loading" Model="@baseModel"
                      LabelColSpan="8"
                      WrapperColSpan="16">
                    <FormItem Label="BUFF Seesion">
                        <Input @bind-Value="@context.BuffSession" />
                    </FormItem>
                    <FormItem Label="Steam Cookies">
                        <Input @bind-Value="@context.SteamCookies" />
                    </FormItem>
                </Form>
            </Body>
        </Card>
    </div>
    <div class="col-lg-6">
        <Card Title="账号配置" Class="shadow-sm mb-3">
            <Body>
                <Form Loading="loading" Model="@webModel"
                      LabelColSpan="8"
                      WrapperColSpan="16">
                    <FormItem Label="开启网页验证">
                        <Checkbox @bind-Value="@context.Auth">开启网页验证</Checkbox>
                    </FormItem>

                </Form>
            </Body>
        </Card>
    </div>
</div>


@code
{
    public class WebModel
    {
        [Required]
        public bool Auth
        {
            get => Configuration.Auth;
            set => Configuration.Auth = value;
        }
    }

    public class BaseModel
    {
        [Required]
        public string BuffSession
        {
            get => Configuration.BuffSession;
            set => Configuration.BuffSession = value;
        }
        [Required]
        public string SteamCookies
        {
            get => Configuration.SteamCookies;
            set => Configuration.SteamCookies = value;
        }
    }

    private class ScraperModel
    {
        public string ProxyUrl
        {
            get => Configuration.ProxyUrl;
            set => Configuration.ProxyUrl = value;
        }
        [Required]
        public int MaxThread {
            get => Configuration.MaxThread;
            set => Configuration.MaxThread = value;
        }
        [Required]
        public string GameKind
        {
            get => Configuration.GameKind;
            set => Configuration.GameKind = value;
        }
        [Required]
        public int MinSellCount {
            get => Configuration.MinSellCount;
            set => Configuration.MinSellCount = value;
        }
        [Required]
        public int MinSellPrice {
            get => Configuration.MinSellPrice;
            set => Configuration.MinSellPrice = value;
        }
        [Required]
        public int MaxSellPrice {
            get => Configuration.MaxSellPrice;
            set => Configuration.MaxSellPrice = value;
        }
    }

    private BaseModel baseModel = new BaseModel();
    private ScraperModel scraperModel = new ScraperModel();
    private WebModel webModel = new WebModel();

    bool loading = false;

    void toggle(bool value) => loading = value;
}